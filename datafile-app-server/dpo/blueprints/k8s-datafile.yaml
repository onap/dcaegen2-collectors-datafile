# -*- indent-tabs-mode: nil -*- # vi: set expandtab:
#
# ============LICENSE_START====================================================
# =============================================================================
# Copyright (C) 2019 Nordix Foundation.
# =============================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END======================================================

tosca_definitions_version: cloudify_dsl_1_3

imports:
  - "http://www.getcloudify.org/spec/cloudify/3.4/types.yaml"
  - "https://nexus.onap.org/service/local/repositories/raw/content/org.onap.dcaegen2.platform.plugins/R3/k8splugin/1.4.4/k8splugin_types.yaml"

inputs:
  dmaap_mr_host:
    type: string
    description: dmaap messagerouter host
    default: message-router.onap.svc.cluster.local
  dmaap_mr_port:
    type: integer
    description: dmaap messagerouter port
    default: 3904
  dmaap_mr_user:
    type: string
    description: dmaap messagerouter user name
    default: ""
  dmaap_mr_passwd:
    type: string
    description: dmaap messagerouter password
    default: ""
  dmaap_buscontroller_service_host:
    type: string
    description: DMAAP Bus Controller host address
    default: "dmaap-bc.onap.svc.cluster.local"
  dmaap_buscontroller_service_port:
    type: string
    description: DMAAP bus Controller host port
    default: "6666"
  dmaap_dr_feed_id:
    type: string
    description: ID of the data router feed that datafile will publish
    default: "bulk_pm_feed"
  dmaap_dr_host:
    type: string
    description: dmaap datarouter host
    default: dmaap-dr-prov.onap.svc.cluster.local
  dmaap_dr_port:
    type: integer
    description: dmaap datarouter port
    default: 8443
  dmaap_dr_user:
    type: string
    description: dmaap datarouter user name
    default: "dradmin"
  dmaap_dr_passwd:
    type: string
    description: dmaap datarouter password
    default: "dradmin"
  tag_version:
    type: string
    default: "nexus3.onap.org:10001/onap/org.onap.dcaegen2.collectors.datafile.datafile-app-server:1.0-SNAPSHOT"
  replicas:
    type: integer
    description: number of instances
    default: 1
  host_port:
    type: integer
    description: port on Kubernetes host where datafile API will be exposed
    default: 30223
  host_port_secure:
    type: integer
    description: secure port on Kubernetes host where datafile API will be exposed
    default: 30224
  secureEnableCert:
    type: boolean
    description: enable certificate base connection with PNF and DMaap
    default: false
node_templates:
  datafile-collector:
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            ports:
              - concat: ["8100:", { get_input: host_port }]
              - concat: ["8433:", { get_input: host_port_secure}]
    properties:
      application_config:
        dmmap.dmaapConsumerConfiguration.dmaapHostName: {get_input: dmaap_mr_host}
        dmmap.dmaapConsumerConfiguration.dmaapPortNumber: {get_input: dmaap_mr_port}
        dmmap.dmaapConsumerConfiguration.dmaapTopicName: "/events/unauthenticated.VES_NOTIFICATION_OUTPUT"
        dmmap.dmaapConsumerConfiguration.dmaapProtocol: "http"
        dmmap.dmaapConsumerConfiguration.dmaapUserName: {get_input: dmaap_mr_user}
        dmmap.dmaapConsumerConfiguration.dmaapUserPassword: {get_input: dmaap_mr_passwd }
        dmmap.dmaapConsumerConfiguration.dmaapContentType: "application/json"
        dmmap.dmaapConsumerConfiguration.consumerId: "C12"
        dmmap.dmaapConsumerConfiguration.consumerGroup: "OpenDCAE-c12"
        dmmap.dmaapConsumerConfiguration.timeoutMs: "-1"
        dmmap.dmaapConsumerConfiguration.messageLimit: "1"
        dmaap.dmaapBusControllerConfiguration.dmaapHostName: {get_input: dmaap_buscontroller_service_host}
        dmaap.dmaapBusControllerConfiguration.dmaapPortNumber: {get_input: dmaap_buscontroller_service_port}
        dmaap.dmaapBusControllerConfiguration.dmaapTopicName: "webapi/feeds"
        dmaap.dmaapBusControllerConfiguration.dmaapDrFeedName: {get_input: dmaap_dr_feed_id}
        dmaap.dmaapBusControllerConfiguration.dmaapProtocol: "https"
        dmaap.dmaapBusControllerConfiguration.dmaapUserName: "dradmin"
        dmaap.dmaapBusControllerConfiguration.dmaapUserPassword: "dradmin"
        dmaap.dmaapBusControllerConfiguration.dmaapContentType: "application/json"
        dmaap.ftp.ftpesConfiguration.keyCert: "/config/ftpKey.jks"
        dmaap.ftp.ftpesConfiguration.keyPassword: "secret"
        dmaap.ftp.ftpesConfiguration.trustedCA: "/config/cacerts"
        dmaap.ftp.ftpesConfiguration.trustedCAPassword: "secret"
        dmaap.security.trustStorePath: "/opt/app/datafile/etc/cert/trust.jks"
        dmaap.security.trustStorePasswordPath: "/opt/app/datafile/etc/cert/trust.pass"
        dmaap.security.keyStorePath: "/opt/app/datafile/etc/cert/key.p12"
        dmaap.security.keyStorePasswordPath: "/opt/app/datafile/etc/cert/key.pass"
        dmaap.security.enableDmaapCertAuth: { get_input: secureEnableCert }
        streams_subscribes:
          dmaap_subscriber:
            type:
              "message_router"
            dmmap_info:
              topic_url:
                "http://message-router.onap.svc.cluster.local:3904/events/unauthenticated.VES_NOTIFICATION_OUTPUT"
        streams_publishes:
          dmaap_publisher:
            type:
              "data_router"
            dmaap_info:
              publish_url:
                ""
      docker_config:
        healthcheck:
          endpoint: /heartbeat
          interval: 15s
          timeout: 1s
          type: http
      image:
        get_input: tag_version
      replicas: {get_input: replicas}
      name: 'dcae-datafile-collector'
      dns_name: 'dcae-datafile-collector'
      log_info:
        log_directory: "/opt/app/datafile/logs"
      tls_info:
        cert_directory: '/opt/app/datafile/etc/cert/'
        use_tls: true
    type: dcae.nodes.ContainerizedPlatformComponent