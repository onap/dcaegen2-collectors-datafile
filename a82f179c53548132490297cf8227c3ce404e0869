{
  "comments": [
    {
      "key": {
        "uuid": "b815d9de_11eed42e",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/tasks/PublishedChecker.java",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 5072
      },
      "writtenOn": "2019-03-19T11:47:01Z",
      "side": 1,
      "message": "as a side comment, contextMap seems to be missing in documentation in all places.\nMaybe a better name of the function would be \nisFilePublished\n\nBut these are details that should not delay this commit.",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 6
      },
      "revId": "a82f179c53548132490297cf8227c3ce404e0869",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e58faad_1bae093c",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/tasks/PublishedChecker.java",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 3763
      },
      "writtenOn": "2019-03-19T16:22:21Z",
      "side": 1,
      "message": "Done in https://gerrit.onap.org/r/#/c/82377/",
      "parentUuid": "b815d9de_11eed42e",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 6
      },
      "revId": "a82f179c53548132490297cf8227c3ce404e0869",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d36e1ad4_f894cf98",
        "filename": "datafile-commons/src/main/java/org/onap/dcaegen2/collectors/datafile/model/CommonFunctions.java",
        "patchSetId": 12
      },
      "lineNbr": 55,
      "author": {
        "id": 105
      },
      "writtenOn": "2019-03-20T16:52:19Z",
      "side": 1,
      "message": "this seems odd.\n\nAre you converting \\ to / to deal with windows paths? If so, you probably should be looking at File.separator to determine if it should be replaced. Technically, \\ is a valid character in a unix filename.\n\nIf not dealing with windows paths, please add comments to say why you\u0027re doing this. JavaDocs comments are always welcome irregardless.",
      "revId": "a82f179c53548132490297cf8227c3ce404e0869",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8bbb30f_038d2b39",
        "filename": "datafile-commons/src/test/java/org/onap/dcaegen2/collectors/datafile/model/CommonFunctionsTest.java",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 105
      },
      "writtenOn": "2019-03-20T16:52:19Z",
      "side": 1,
      "message": "this should be cognizant of File.separator, and using appending File.separator instead of append \"\\\". See further comments on CommonFunctions.",
      "revId": "a82f179c53548132490297cf8227c3ce404e0869",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0156f096_1e97470c",
        "filename": "datafile-commons/src/test/java/org/onap/dcaegen2/collectors/datafile/model/CommonFunctionsTest.java",
        "patchSetId": 12
      },
      "lineNbr": 54,
      "author": {
        "id": 5072
      },
      "writtenOn": "2019-03-21T07:22:42Z",
      "side": 1,
      "message": "Maybe this is a bit inopportune but the functionality tested is just two mapping functions; \n- Path -\u003e JsonElement  \n- JsonElement -\u003e Path. \n\nThese are the two lines of code tested: \n\nreturn Paths.get(jsonElement.getAsString());\nreturn new JsonPrimitive(path.toString()); \n    \n\nThis kind of test is very hard to maintain because if the test fails one will have figure out which of all these letters that does not math. This will happen any time ConsumerDmaapModel is changed and the tested code has nothing to with that class. \n\nThe problem with string representation of file names in windows and linux is only a problem for the test since the actual string representation is compared. \n\nI would argue that this test is not motivated. I would remove it.",
      "range": {
        "startLine": 54,
        "startChar": 17,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "a82f179c53548132490297cf8227c3ce404e0869",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}