{
  "comments": [
    {
      "key": {
        "uuid": "a61cac24_ca1e5e45",
        "filename": "datafile-app-server/pom.xml",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 3395
      },
      "writtenOn": "2019-06-17T14:32:07Z",
      "side": 1,
      "message": "extract as variable as its the same one as in spring-boot-autoconfigure",
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea2c95f5_37bffbe2",
        "filename": "datafile-app-server/pom.xml",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 5107
      },
      "writtenOn": "2019-06-18T08:15:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a61cac24_ca1e5e45",
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfc1a38b_6d3a5d7f",
        "filename": "datafile-app-server/pom.xml",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 3395
      },
      "writtenOn": "2019-06-17T14:32:07Z",
      "side": 1,
      "message": "extract as variable",
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4f28125_fb0460c6",
        "filename": "datafile-app-server/pom.xml",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 5107
      },
      "writtenOn": "2019-06-18T08:15:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfc1a38b_6d3a5d7f",
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b6f34b2_56fab1ce",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 2683
      },
      "writtenOn": "2019-06-18T07:15:10Z",
      "side": 1,
      "message": "If you are going to subscribe to the updates you can use the CbsClient api directly. The example is on the wiki page.\n\nIn current solution you are reading environment and performing CBS service lookup every 5 minutes. I believe it should be done the other way around: lookup cbs and then subscribe for updates.",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 95,
        "endChar": 77
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5cdcc2_600c61cf",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 2683
      },
      "writtenOn": "2019-06-18T07:15:10Z",
      "side": 1,
      "message": "Do you have an example of what are you keeping in CBS? Which actual datafilecolector-related keys are kept in Consul? I\u0027m asking because I don\u0027t understand why do you need separate CBS call for this \"dmaap\" key.\n\nDuring Dublin release there was a Jira issue for aligning every (?) service configuration to the DCAE requirements. That includes making DMAAP streams config use standard structure (see https://onap.readthedocs.io/en/latest/submodules/dcaegen2.git/docs/sections/components/component-specification/dmaap-connection-objects.html).\n\nThere is an example of a service config made available on CBS by the DCAE platform on https://wiki.onap.org/display/DW/MicroServices+Onboarding+in+ONAP#MicroServicesOnboardinginONAP-DMAAPbinding\n\nWhen using this standard structure, DCAE SDK cbs-client usage should be easy. We\u0027ve made it so it should help using DCAE standards (and make it hard/impossible to use non-standard approaches).",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74836ada_7b7a3b65",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 3763
      },
      "writtenOn": "2019-06-18T07:23:44Z",
      "side": 1,
      "message": "When DFC is started with the blueprint we use the DCAE DMaaP plugin to create the topics in DataRouter that we send the files to. The plugin puts the info about these feeds in Consul using the service name as the key, see https://wiki.onap.org/display/DW/Dmaap+Plugin+Integration. This is the reason we need to make a separate call with \"dmaap\" as key.",
      "parentUuid": "6a5cdcc2_600c61cf",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76b587d2_5353c11b",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 5107
      },
      "writtenOn": "2019-06-18T07:24:34Z",
      "side": 1,
      "message": "Hi, It looks like something like this:\n\nConsul keys:\n \nsefa96bf872c5403ba7d7ec22a62306d7-dfc\n{\"dmaap.ftp.ftpesConfiguration.keyCert\": \"/config/dfc.jks\", \"dmaap.dmaapConsumerConfiguration\": \"topic00\", \"dmaap.security.keyStorePasswordPath\": \"/opt/app/datafile/etc/cert/key.pass\", \"dmaap.ftp.ftpesConfiguration.keyPassword\": \"secret\", \"streams_subscribes\": {\"topic00\": {\"dmmap_info\": {\"topic_url\": \"http://dradmin:dradmin@localhost:2222/events/unauthenticated.VES_NOTIFICATION_OUTPUT/OpenDcae-c12/C12\"}, \"type\": \"message_router\"}}, \"dmaap.ftp.ftpesConfiguration.trustedCa\": \"/config/ftp.jks\", \"dmaap.security.trustStorePasswordPath\": \"/opt/app/datafile/etc/cert/trust.pass\", \"dmaap.security.keyStorePath\": \"/opt/app/datafile/etc/cert/key.p12\", \"dmaap.ftp.ftpesConfiguration.trustedCaPassword\": \"secret\", \"dmaap.dmaapProducerConfiguration\": \"PM_MEAS_FILESfeed00\", \"dmaap.security.enableDmaapCertAuth\": false, \"dmaap.security.trustStorePath\": \"/opt/app/datafile/etc/cert/trust.jks\"}\n \nsefa96bf872c5403ba7d7ec22a62306d7-dfc:dmaap\n{\"feed00\": {\"username\": \"0MAmMHUO\", \"location\": \"loc00\", \"log_url\": \"https://dmaap-dr-prov/feedlog/3\", \"publisher_id\": \"3.0jocq\", \"password\": \"V4kKJAnqGWmrWsTO\", \"publish_url\": \"https://dmaap-dr-prov/publish/3\"}}\n \n\nThe different is that the key dmaap are automaticlly added by dmaap plugin, the dmaap plugin is used to generate the configuration dynamically. \n\nThe link you provided is for static topics. They are in different use case. \n\nso we use getconfiguration for the service configuration, and getbyKey to get the dynamic configuration generated by dmaap plugin.",
      "parentUuid": "6a5cdcc2_600c61cf",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34811fa4_c0868363",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 3763
      },
      "writtenOn": "2019-06-18T07:27:55Z",
      "side": 1,
      "message": "Also see https://onap.readthedocs.io/en/dublin/submodules/ccsdk/platform/plugins.git/docs/dmaap.html?highlight\u003ddmaap%20plugin",
      "parentUuid": "76b587d2_5353c11b",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "195912fa_7e3ff46e",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 3763
      },
      "writtenOn": "2019-06-18T07:32:38Z",
      "side": 1,
      "message": "In El Alto we change the DFC to be able to handle any type of files, where each type is sent to its own topic. So the operator is able to configure the topics, we no longer have just one static topic. This is the reason we start using the DMaaP plugin.",
      "parentUuid": "34811fa4_c0868363",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8b802da_9592973d",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 2683
      },
      "writtenOn": "2019-06-18T07:54:33Z",
      "side": 1,
      "message": "OK. That makes a lot more sense to me now.\n\nThen we should consider enhancing also a DCAE SDK cbs-client StreamParsers API to be able to use these dynamically configured streams or (as an alternative) try to make the structure of static and dynamic configuration common (more work but cleaner solution).\n\nBut that may be a future enhancement. For now the logic in CloudConfigParser can do the job and you may use basic CBS client functionality.",
      "parentUuid": "195912fa_7e3ff46e",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c9be951_41364eac",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-06-18T15:14:21Z",
      "side": 1,
      "message": "CBS query already support dmaap key via GET /service_component/{service_component_name} call. Moving to dmaap plugin will ensure this key is populated in consul. With static topic configuration in blueprint, they get stored under application config directly.",
      "parentUuid": "e8b802da_9592973d",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99a3ae93_03e6d473",
        "filename": "datafile-app-server/src/main/java/org/onap/dcaegen2/collectors/datafile/configuration/AppConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 515
      },
      "writtenOn": "2019-06-18T15:45:48Z",
      "side": 1,
      "message": "Are you trying to fetch the dmaap key specifically, or are you trying to just get your merged config including dmaap info?\n\nIf you just want the merged config, the call to /service_component does this. It looks for \u003c\u003cdmaap keys\u003e\u003e and then uses the data set by the dmaap plugin to do the bind. Assuming service_component_name:dmaap is set appropriately in Consul, the call to /service_component will produce a bound config with dmaap info. \n\nIf for some reason you are trying to access the raw dmaap key, which is probably not advisable, you can either use /service_component_all, or /dmaap/.",
      "parentUuid": "2c9be951_41364eac",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 157,
        "endChar": 114
      },
      "revId": "7700e8325a4930b76268bfab7597711b1e90dd17",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}